//
// File generated by rootcint at Fri Dec  6 11:15:33 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIBackgroundEstimatordIDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "src/BackgroundEstimator/Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace TOOLS {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TOOLS_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TOOLS", 0 /*version*/, "./include/BKGE_Tools.h", 36,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TOOLS_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TOOLS_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace BKGE_NS {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void BKGE_NS_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("BKGE_NS", 0 /*version*/, "./include/BackgroundEstimator.h", 14,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &BKGE_NS_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void BKGE_NS_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void BackgroundEstimator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BackgroundEstimator_Dictionary();
   static void delete_BackgroundEstimator(void *p);
   static void deleteArray_BackgroundEstimator(void *p);
   static void destruct_BackgroundEstimator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BackgroundEstimator*)
   {
      ::BackgroundEstimator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BackgroundEstimator),0);
      static ::ROOT::TGenericClassInfo 
         instance("BackgroundEstimator", "./include/BackgroundEstimator.h", 23,
                  typeid(::BackgroundEstimator), DefineBehavior(ptr, ptr),
                  0, &BackgroundEstimator_Dictionary, isa_proxy, 0,
                  sizeof(::BackgroundEstimator) );
      instance.SetDelete(&delete_BackgroundEstimator);
      instance.SetDeleteArray(&deleteArray_BackgroundEstimator);
      instance.SetDestructor(&destruct_BackgroundEstimator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BackgroundEstimator*)
   {
      return GenerateInitInstanceLocal((::BackgroundEstimator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BackgroundEstimator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BackgroundEstimator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BackgroundEstimator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrapper around operator delete
   static void delete_BackgroundEstimator(void *p) {
      delete ((::BackgroundEstimator*)p);
   }
   static void deleteArray_BackgroundEstimator(void *p) {
      delete [] ((::BackgroundEstimator*)p);
   }
   static void destruct_BackgroundEstimator(void *p) {
      typedef ::BackgroundEstimator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BackgroundEstimator

/********************************************************
* src/BackgroundEstimator/Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TOOLS */
static int G__Dict_709_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TOOLS::CalculatePSF((TH1F*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TOOLS::CalculatePSF((TH1F*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TOOLS::CalculatePSF((TH1F*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TOOLS::CalculatePSF_ThetaPhi((TH1F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TOOLS::CalculatePSF_ThetaPhi((TH1F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TOOLS::CalculatePSF_ThetaPhi((TH1F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOOLS::ReadROI_File((TH1F*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::ProgressBar((const short) G__int(libp->para[0]), (const short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::CalcSpectrallyWeightedExposure((TH1F*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::CalcMeanEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::CalcMeanEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::ReadExposureMap(*((string*) G__int(libp->para[0])), (TH2F*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const short) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::CalcExposure(
(TFile*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (TH1F*) G__int(libp->para[4]), *((string*) G__int(libp->para[5]))
, (int) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letint(result7, 105, (long) TOOLS::Make_Burst_Plots(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (TH1F*) G__int(libp->para[7])
, (short) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) TOOLS::Make_Burst_Plots(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (TH1F*) G__int(libp->para[7])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) TOOLS::Integrate((TH2F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, *((string*) G__int(libp->para[4]))));
      break;
   case 4:
      G__letdouble(result7, 100, (double) TOOLS::Integrate((TH2F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 105, (long) TOOLS::Make_Plots(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) TOOLS::Make_Plots((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) TOOLS::Make_Plots((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      TOOLS::GetThetaPhi(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (double) G__double(libp->para[3])
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TOOLS::GetThetaPhi(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (double) G__double(libp->para[3])
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TOOLS::GetThetaPhi(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (double) G__double(libp->para[3])
, *((string*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOOLS::MakePointingPlots((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((string*) G__int(libp->para[5]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) TOOLS::GimmeEarthAzimuth((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (astro::SkyDir::CoordSystem) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) TOOLS::GimmeEarthAzimuth((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::Galactic((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::Galactic((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::unGalactic((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::unGalactic((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOOLS::GetCTBClassLevel(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOOLS::GetClassMask(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TOOLS::GetDataClassName_noConv(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOOLS::GetConversionType(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TOOLS::GetConversionName(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TOOLS::GetDataClassVersion(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::WeightedP((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::PoissonErrorBar((short) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TOOLS::Get(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TOOLS::GetS(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::Set(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::Set(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TOOLS::LoadConfig(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TOOLS::LoadConfig(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::PrintConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::WriteConfig(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      TOOLS::Run_gtltcube(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])));
      G__setnull(result7);
      break;
   case 6:
      TOOLS::Run_gtltcube(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      TOOLS::Run_gtexpcube(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5])
, (char*) G__int(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]), *((string*) G__int(libp->para[11])));
      G__setnull(result7);
      break;
   case 11:
      TOOLS::Run_gtexpcube(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5])
, (char*) G__int(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_709_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOOLS::ReadGTI(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BKGE_NS */
static int G__Dict_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 105, (long) BKGE_NS::CalculateBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (bool) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) BKGE_NS::CalculateBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) BKGE_NS::CalculateBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      {
         string* pobj;
         string xobj = BKGE_NS::PlotBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (bool) G__int(libp->para[9])
, (int) G__int(libp->para[10]), (double) G__double(libp->para[11]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 11:
      {
         string* pobj;
         string xobj = BKGE_NS::PlotBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (bool) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 10:
      {
         string* pobj;
         string xobj = BKGE_NS::PlotBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (bool) G__int(libp->para[9]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 9:
      {
         string* pobj;
         string xobj = BKGE_NS::PlotBackground(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])), *((string*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_712_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BKGE_NS::MakeGtLikeTemplate((float) G__double(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}


/* BackgroundEstimator */
static int G__Dict_713_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BackgroundEstimator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) BackgroundEstimator(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) BackgroundEstimator(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BackgroundEstimator(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) BackgroundEstimator(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BackgroundEstimator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_713_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->Make_Background_Map(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (bool) G__int(libp->para[6]), (bool) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->Make_Background_Map(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (bool) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->Make_Background_Map(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->Make_Background_Map(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_713_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->FillBackgroundHist(*((string*) G__int(libp->para[0])), (TH1F*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (short) G__int(libp->para[4]), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((BackgroundEstimator*) G__getstructoffset())->FillBackgroundHist(*((string*) G__int(libp->para[0])), (TH1F*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (short) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_713_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((BackgroundEstimator*) G__getstructoffset())->Energy2Bin((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_713_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BackgroundEstimator*) G__getstructoffset())->Bin2Energy((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_713_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BackgroundEstimator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BackgroundEstimator(*(BackgroundEstimator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BackgroundEstimator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BackgroundEstimator G__TBackgroundEstimator;
static int G__Dict_713_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BackgroundEstimator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BackgroundEstimator*) (soff+(sizeof(BackgroundEstimator)*i)))->~G__TBackgroundEstimator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BackgroundEstimator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BackgroundEstimator*) (soff))->~G__TBackgroundEstimator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_713_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BackgroundEstimator* dest = (BackgroundEstimator*) G__getstructoffset();
   *dest = *(BackgroundEstimator*) libp->para[0].ref;
   const BackgroundEstimator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TOOLS */

/* BKGE_NS */

/* BackgroundEstimator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TProfile*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETProfilemUcOallocatorlETProfilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETProfilemUcOallocatorlETProfilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TOOLS */
static void G__setup_memvarTOOLS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TOOLS));
   {
   }
   G__tag_memvar_reset();
}


   /* BKGE_NS */
static void G__setup_memvarBKGE_NS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_BKGE_NS));
   {
   }
   G__tag_memvar_reset();
}


   /* BackgroundEstimator */
static void G__setup_memvarBackgroundEstimator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_BackgroundEstimator));
   { BackgroundEstimator *p; p=(BackgroundEstimator*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Energy_Min_datafiles)-(long)(p)),100,0,0,-1,-1,-1,1,"Energy_Min_datafiles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_Max_datafiles)-(long)(p)),100,0,0,-1,-1,-1,1,"Energy_Max_datafiles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_Bins_datafiles)-(long)(p)),105,0,0,-1,-1,-1,1,"Energy_Bins_datafiles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_Min_user)-(long)(p)),100,0,0,-1,-1,-1,1,"Energy_Min_user=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_Max_user)-(long)(p)),100,0,0,-1,-1,-1,1,"Energy_Max_user=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_Bins_user)-(long)(p)),105,0,0,-1,-1,-1,1,"Energy_Bins_user=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UsingDefaultBinning)-(long)(p)),103,0,0,-1,-1,-1,1,"UsingDefaultBinning=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DataClass)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"DataClass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DataClassName_noConv)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"DataClassName_noConv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ConversionName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"ConversionName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DataClassVersion)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"DataClassVersion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ConversionType)-(long)(p)),105,0,0,-1,-1,-1,1,"ConversionType=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"FT1ZenithTheta_Cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR),G__defined_typename("vector<TProfile*>"),-1,2,"pRatiovsTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"EstimatorVersion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"Residuals_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"RateFit_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"ThetaPhiFits_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"EastWest_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"TimeCorrectionFactors_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"StartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"EndTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"StopTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,2,"TimeBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"MinCTBClassLevel=",0,"for P6");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"EventClassMask=",0,"for P7");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"BinSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"TimeStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"L_BINS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"B_BINS=",0,"/Number of longitude and latitude map bins ");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"name[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,2,"DataDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,2,"fResidualOverExposure=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,2,"fRateFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,2,"fThetaPhiFits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,2,"fCorrectionFactors=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTOOLS(void) {
   /* TOOLS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TOOLS));
   G__memfunc_setup("CalculatePSF",1143,G__Dict_709_0_1, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1F' - 0 - hROI d - - 0 - MET "
"u 'string' - 0 - FT2_FILE u 'string' - 0 - DATACLASS "
"f - - 0 '-1' Containment f - - 0 '-1' MaxRadius", (char*)NULL, (void*) G__func2void( (void (*)(TH1F*, double, string, string, float, float))(&TOOLS::CalculatePSF) ), 0);
   G__memfunc_setup("CalculatePSF_ThetaPhi",2029,G__Dict_709_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1F' - 0 - hROI f - - 0 - theta "
"f - - 0 - phi u 'string' - 0 - DATACLASS "
"f - - 0 '-1' Containment f - - 0 '-1' MaxRadius", (char*)NULL, (void*) G__func2void( (void (*)(TH1F*, float, float, string, float, float))(&TOOLS::CalculatePSF_ThetaPhi) ), 0);
   G__memfunc_setup("ReadROI_File",1093,G__Dict_709_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - hROI u 'string' - 0 - filename", (char*)NULL, (void*) G__func2void( (int (*)(TH1F*, string))(&TOOLS::ReadROI_File) ), 0);
   G__memfunc_setup("ProgressBar",1130,G__Dict_709_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - - 10 - max s - - 10 - current", (char*)NULL, (void*) G__func2void( (void (*)(const short, const short))(&TOOLS::ProgressBar) ), 0);
   G__memfunc_setup("CalcSpectrallyWeightedExposure",3106,G__Dict_709_0_5, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - hExposure d - - 0 - a", (char*)NULL, (void*) G__func2void( (double (*)(TH1F*, double))(&TOOLS::CalcSpectrallyWeightedExposure) ), 0);
   G__memfunc_setup("CalcMeanEnergy",1374,G__Dict_709_0_6, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - MinEnergy d - - 0 - MaxEnergy "
"d - - 0 - a", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double))(&TOOLS::CalcMeanEnergy) ), 0);
   G__memfunc_setup("CalcMeanEnergy",1374,G__Dict_709_0_7, 100, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - MinEnergy d - - 0 - PeakEnergy "
"d - - 0 - MaxEnergy d - - 0 - a "
"d - - 0 - b", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double, double))(&TOOLS::CalcMeanEnergy) ), 0);
   G__memfunc_setup("ReadExposureMap",1525,G__Dict_709_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - ExposureFilename U 'TH2F' - 0 - hExposure "
"i - - 0 - ie s - - 10 - verbosity", (char*)NULL, (void*) G__func2void( (void (*)(string, TH2F*, int, const short))(&TOOLS::ReadExposureMap) ), 0);
   G__memfunc_setup("CalcExposure",1230,G__Dict_709_0_9, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'TFile' - 0 - fResults f - - 0 - L_BURST "
"f - - 0 - B_BURST f - - 0 - FT1ZenithTheta_Cut "
"U 'TH1F' - 0 - hExposure u 'string' - 0 - GRB_DIR "
"i - - 0 - verbosity", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, float, float, float, TH1F*, string, int))(&TOOLS::CalcExposure) ), 0);
   G__memfunc_setup("Make_Burst_Plots",1630,G__Dict_709_0_10, 105, -1, -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - DataClass u 'string' - 0 - FT1_FILE "
"u 'string' - 0 - GRB_DIR d - - 0 - RA_BURST "
"d - - 0 - DEC_BURST d - - 0 - GRB_t0 "
"d - - 0 - Burst_Dur U 'TH1F' - 0 - hROI "
"s - - 0 '1' verbosity", (char*)NULL, (void*) G__func2void( (int (*)(string, string, string, double, double, double, double, TH1F*, short))(&TOOLS::Make_Burst_Plots) ), 0);
   G__memfunc_setup("Integrate",931,G__Dict_709_0_11, 100, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH2F' - 0 - hMap f - - 0 - L_BURST "
"f - - 0 - B_BURST f - - 0 - ROI_RADIUS "
"u 'string' - 0 '\"\"' MAPNAME", (char*)NULL, (void*) G__func2void( (double (*)(TH2F*, float, float, float, string))(&TOOLS::Integrate) ), 0);
   G__memfunc_setup("Make_Plots",1007,G__Dict_709_0_12, 105, -1, -1, 0, 7, 1, 1, 0, 
"d - - 0 - PreTime d - - 0 - PostTime "
"d - - 0 - Burst_t0 u 'string' - 0 - Filename "
"u 'string' - 0 - FT2_FILE i - - 0 '1' verbosity "
"f - - 0 '1' TimeStep", (char*)NULL, (void*) G__func2void( (int (*)(double, double, double, string, string, int, float))(&TOOLS::Make_Plots) ), 0);
   G__memfunc_setup("GetThetaPhi",1079,G__Dict_709_0_13, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - - 1 - theta d - - 1 - phi "
"d - - 1 - ZTheta d - - 0 - MET "
"u 'string' - 0 - FT2_FILE f - - 0 '-999' RA "
"f - - 0 '-999' DEC", (char*)NULL, (void*) G__func2void( (void (*)(double&, double&, double&, double, string, float, float))(&TOOLS::GetThetaPhi) ), 0);
   G__memfunc_setup("MakePointingPlots",1752,G__Dict_709_0_14, 85, G__get_linked_tagnum(&G__DictLN_TCanvas), -1, 0, 6, 1, 1, 0, 
"d - - 0 - PreTime d - - 0 - PostTime "
"d - - 0 - Burst_t0 d - - 0 - RA "
"d - - 0 - DEC u 'string' - 0 - FT2_FILE", (char*)NULL, (void*) G__func2void( (TCanvas* (*)(double, double, double, double, double, string))(&TOOLS::MakePointingPlots) ), 0);
   G__memfunc_setup("GimmeEarthAzimuth",1733,G__Dict_709_0_15, 102, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - C1 f - - 0 - C2 "
"f - - 0 - C1Zenith f - - 0 - C2Zenith "
"u 'astro::SkyDir::CoordSystem' 'astro::SkyDir::CoordSystem' 0 'astro::SkyDir::EQUATORIAL' coordinate", (char*)NULL, (void*) G__func2void( (float (*)(float, float, float, float, astro::SkyDir::CoordSystem))(&TOOLS::GimmeEarthAzimuth) ), 0);
   G__memfunc_setup("Galactic",792,G__Dict_709_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - ra f - - 0 - dec "
"F - - 0 - glon F - - 0 - glat", (char*)NULL, (void*) G__func2void( (void (*)(float, float, float*, float*))(&TOOLS::Galactic) ), 0);
   G__memfunc_setup("Galactic",792,G__Dict_709_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - ra d - - 0 - dec "
"D - - 0 - glon D - - 0 - glat", (char*)NULL, (void*) G__func2void( (void (*)(double, double, double*, double*))(&TOOLS::Galactic) ), 0);
   G__memfunc_setup("unGalactic",1019,G__Dict_709_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - lon f - - 0 - lat "
"F - - 0 - ra F - - 0 - dec", (char*)NULL, (void*) G__func2void( (void (*)(float, float, float*, float*))(&TOOLS::unGalactic) ), 0);
   G__memfunc_setup("unGalactic",1019,G__Dict_709_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - lon d - - 0 - lat "
"D - - 0 - ra D - - 0 - dec", (char*)NULL, (void*) G__func2void( (void (*)(double, double, double*, double*))(&TOOLS::unGalactic) ), 0);
   G__memfunc_setup("GetCTBClassLevel",1511,G__Dict_709_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (int (*)(string))(&TOOLS::GetCTBClassLevel) ), 0);
   G__memfunc_setup("GetClassMask",1186,G__Dict_709_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (int (*)(string))(&TOOLS::GetClassMask) ), 0);
   G__memfunc_setup("GetDataClassName_noConv",2275,G__Dict_709_0_22, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (string (*)(string))(&TOOLS::GetDataClassName_noConv) ), 0);
   G__memfunc_setup("GetConversionType",1768,G__Dict_709_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (int (*)(string))(&TOOLS::GetConversionType) ), 0);
   G__memfunc_setup("GetConversionName",1735,G__Dict_709_0_24, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (string (*)(string))(&TOOLS::GetConversionName) ), 0);
   G__memfunc_setup("GetDataClassVersion",1910,G__Dict_709_0_25, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - DataClass", (char*)NULL, (void*) G__func2void( (string (*)(string))(&TOOLS::GetDataClassVersion) ), 0);
   G__memfunc_setup("WeightedP",897,G__Dict_709_0_26, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - nev d - - 0 - bkg "
"d - - 0 - dbkg", (char*)NULL, (void*) G__func2void( (double (*)(int, double, double))(&TOOLS::WeightedP) ), 0);
   G__memfunc_setup("PoissonErrorBar",1546,G__Dict_709_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"s - - 0 - type i - - 0 - events", (char*)NULL, (void*) G__func2void( (double (*)(short, int))(&TOOLS::PoissonErrorBar) ), 0);
   G__memfunc_setup("Get",288,G__Dict_709_0_28, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) G__func2void( (double (*)(string))(&TOOLS::Get) ), 0);
   G__memfunc_setup("GetS",371,G__Dict_709_0_29, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) G__func2void( (string (*)(string))(&TOOLS::GetS) ), 0);
   G__memfunc_setup("Set",300,G__Dict_709_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name d - - 0 - val", (char*)NULL, (void*) G__func2void( (void (*)(string, double))(&TOOLS::Set) ), 0);
   G__memfunc_setup("Set",300,G__Dict_709_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - vals", (char*)NULL, (void*) G__func2void( (void (*)(string, string))(&TOOLS::Set) ), 0);
   G__memfunc_setup("LoadConfig",982,G__Dict_709_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - ConfigFile g - - 0 'true' ls", (char*)NULL, (void*) G__func2void( (void (*)(string, bool))(&TOOLS::LoadConfig) ), 0);
   G__memfunc_setup("PrintConfig",1123,G__Dict_709_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOOLS::PrintConfig) ), 0);
   G__memfunc_setup("WriteConfig",1121,G__Dict_709_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - ConfigFile", (char*)NULL, (void*) G__func2void( (void (*)(string))(&TOOLS::WriteConfig) ), 0);
   G__memfunc_setup("Run_gtltcube",1262,G__Dict_709_0_35, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'string' - 0 - GRB_DIR d - - 0 - TMin "
"d - - 0 - TMax u 'string' - 0 - FT2_FILE "
"f - - 0 - FT1ZenithTheta_Cut i - - 0 - verbosity "
"u 'string' - 0 '\"\"' gtltcube_Filename", (char*)NULL, (void*) G__func2void( (void (*)(string, double, double, string, float, int, string))(&TOOLS::Run_gtltcube) ), 0);
   G__memfunc_setup("Run_gtexpcube",1371,G__Dict_709_0_36, 121, -1, -1, 0, 12, 1, 1, 0, 
"u 'string' - 0 - GRB_DIR d - - 0 - TMin "
"d - - 0 - TMax u 'string' - 0 - FT2_FILE "
"u 'string' - 0 - DATACLASS f - - 0 - FT1ZenithTheta_Cut "
"C - - 0 - Outfile f - - 0 - Energy_Min "
"f - - 0 - Energy_Max i - - 0 - Energy_Bins "
"i - - 0 - verbosity u 'string' - 0 '\"\"' gtltcube_Filename", (char*)NULL, (void*) G__func2void( (void (*)(string, double, double, string, string, float, char*, float, float, int, int, string))(&TOOLS::Run_gtexpcube) ), 0);
   G__memfunc_setup("ReadGTI",608,G__Dict_709_0_37, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - GTI_Starts u 'vector<double,allocator<double> >' 'vector<double>' 1 - GTI_Ends "
"u 'string' - 0 - FitsAllSkyFile d - - 0 - StartTime "
"d - - 0 - EndTime", (char*)NULL, (void*) G__func2void( (void (*)(vector<double>&, vector<double>&, string, double, double))(&TOOLS::ReadGTI) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBKGE_NS(void) {
   /* BKGE_NS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_BKGE_NS));
   G__memfunc_setup("CalculateBackground",1934,G__Dict_712_0_1, 105, -1, -1, 0, 11, 1, 1, 0, 
"u 'string' - 0 - Interval_name d - - 0 - MET "
"d - - 0 - DURATION u 'string' - 0 - FT1_FILE "
"u 'string' - 0 - FT2_FILE u 'string' - 0 - DATACLASS "
"d - - 0 - Energy_Min_user d - - 0 - Energy_Max_user "
"i - - 0 - Energy_Bins_user i - - 0 '1' verbosity "
"g - - 0 'true' Calc_Residual", (char*)NULL, (void*) G__func2void( (int (*)(string, double, double, string, string, string, double, double, int, int, bool))(&BKGE_NS::CalculateBackground) ), 0);
   G__memfunc_setup("PlotBackground",1439,G__Dict_712_0_2, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 12, 1, 1, 0, 
"u 'string' - 0 - Interval_name d - - 0 - MET "
"d - - 0 - DURATION u 'string' - 0 - FT1_FILE "
"u 'string' - 0 - FT2_FILE u 'string' - 0 - DATACLASS "
"d - - 0 - Energy_Min_user d - - 0 - Energy_Max_user "
"i - - 0 - Energy_Bins_user g - - 0 'true' OverwritePlots "
"i - - 0 '1' verbosity d - - 0 '-1' MET_FOR_THETA", (char*)NULL, (void*) G__func2void( (string (*)(string, double, double, string, string, string, double, double, int, bool, int, double))(&BKGE_NS::PlotBackground) ), 0);
   G__memfunc_setup("MakeGtLikeTemplate",1786,G__Dict_712_0_3, 105, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - gtlike_ROI u 'string' - 0 - GRB_DIR "
"u 'string' - 0 - DATACLASS", (char*)NULL, (void*) G__func2void( (int (*)(float, string, string))(&BKGE_NS::MakeGtLikeTemplate) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBackgroundEstimator(void) {
   /* BackgroundEstimator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_BackgroundEstimator));
   G__memfunc_setup("BackgroundEstimator",1976,G__Dict_713_0_1, 105, G__get_linked_tagnum(&G__DictLN_BackgroundEstimator), -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - aClass d - - 0 '-1' EMin "
"d - - 0 '-1' EMax i - - 0 '-1' EBins "
"g - - 0 'true' initialize g - - 0 'true' ShowLogo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Make_Background_Map",1882,G__Dict_713_0_2, 105, -1, -1, 0, 8, 1, 1, 0, 
"u 'string' - 0 - FT1_FILE u 'string' - 0 - FT2File "
"u 'string' - 0 - GRB_DIR d - - 0 - Burst_t0 "
"d - - 0 - Burst_Dur i - - 0 '1' verbosity "
"g - - 0 'true' Calc_Residual g - - 0 'false' Save_Earth_Coo_Map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillBackgroundHist",1823,G__Dict_713_0_3, 105, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - GRB_DIR U 'TH1F' - 0 - hROI_Max "
"d - - 0 - RA_BURST d - - 0 - DEC_BURST "
"s - - 0 - type i - - 0 '0' verbosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy2Bin",949,G__Dict_713_0_4, 114, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin2Energy",949,G__Dict_713_0_5, 102, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimulateSky",1147,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 2, 0, 
"u 'BackgroundEstimator::Plots_Struct' - 0 - myPlots_Struct U 'TH2F' - 2 - hSimulatedSky "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GTI_Start u 'vector<double,allocator<double> >' 'vector<double>' 0 - GTI_End "
"i - - 10 - nEnergy U 'TH2F' - 2 '0' hSimulatedSky_Earth "
"f - - 0 '0' TimeStep_user f - - 0 '20' hSimulatedSky_Earth_Map_Min_B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GimmeCorrectionFactor",2150,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 2, 0, 
"s - - 0 - ie d - - 0 - MET", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassesCuts",1038,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 2, 0, 
"U 'fitsfile' 'fitsfile' 0 - fptr l - - 0 - i "
"i - - 0 - format", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BackgroundEstimator", 1976, G__Dict_713_0_9, (int) ('i'), G__get_linked_tagnum(&G__DictLN_BackgroundEstimator), -1, 0, 1, 1, 1, 0, "u 'BackgroundEstimator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BackgroundEstimator", 2102, G__Dict_713_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_713_0_11, (int) ('u'), G__get_linked_tagnum(&G__DictLN_BackgroundEstimator), -1, 1, 1, 1, 1, 0, "u 'BackgroundEstimator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__DictLN_astro = { "astro" , 110 , -1 };
G__linked_taginfo G__DictLN_astrocLcLSkyDir = { "astro::SkyDir" , 99 , -1 };
G__linked_taginfo G__DictLN_astrocLcLSkyDircLcLCoordSystem = { "astro::SkyDir::CoordSystem" , 101 , -1 };
G__linked_taginfo G__DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_fitsfile = { "fitsfile" , 115 , -1 };
G__linked_taginfo G__DictLN_TOOLS = { "TOOLS" , 110 , -1 };
G__linked_taginfo G__DictLN_BKGE_NS = { "BKGE_NS" , 110 , -1 };
G__linked_taginfo G__DictLN_BackgroundEstimator = { "BackgroundEstimator" , 99 , -1 };
G__linked_taginfo G__DictLN_BackgroundEstimatorcLcLPlots_Struct = { "BackgroundEstimator::Plots_Struct" , 115 , -1 };
G__linked_taginfo G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR = { "vector<TProfile*,allocator<TProfile*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETProfilemUcOallocatorlETProfilemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TProfile*,allocator<TProfile*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TFile.tagnum = -1 ;
  G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TH1F.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TH2F.tagnum = -1 ;
  G__DictLN_astro.tagnum = -1 ;
  G__DictLN_astrocLcLSkyDir.tagnum = -1 ;
  G__DictLN_astrocLcLSkyDircLcLCoordSystem.tagnum = -1 ;
  G__DictLN_TCanvas.tagnum = -1 ;
  G__DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_fitsfile.tagnum = -1 ;
  G__DictLN_TOOLS.tagnum = -1 ;
  G__DictLN_BKGE_NS.tagnum = -1 ;
  G__DictLN_BackgroundEstimator.tagnum = -1 ;
  G__DictLN_BackgroundEstimatorcLcLPlots_Struct.tagnum = -1 ;
  G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETProfilemUcOallocatorlETProfilemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__DictLN_astro);
   G__get_linked_tagnum_fwd(&G__DictLN_astrocLcLSkyDir);
   G__get_linked_tagnum_fwd(&G__DictLN_astrocLcLSkyDircLcLCoordSystem);
   G__get_linked_tagnum_fwd(&G__DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_fitsfile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TOOLS),0,-1,0,(char*)NULL,G__setup_memvarTOOLS,G__setup_memfuncTOOLS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_BKGE_NS),0,-1,0,(char*)NULL,G__setup_memvarBKGE_NS,G__setup_memfuncBKGE_NS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_BackgroundEstimator),sizeof(BackgroundEstimator),-1,33792,(char*)NULL,G__setup_memvarBackgroundEstimator,G__setup_memfuncBackgroundEstimator);
   G__get_linked_tagnum_fwd(&G__DictLN_BackgroundEstimatorcLcLPlots_Struct);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETProfilemUcOallocatorlETProfilemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETProfilemUcOallocatorlETProfilemUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

